<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.source.dao.OpStartRoomMapper" >
  <resultMap id="BaseResultMap" type="com.source.model.OpStartRoom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="hotel_id" property="hotelId" jdbcType="VARCHAR" />
    <result column="room_num" property="roomNum" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
    <result column="device_type_code" property="deviceTypeCode" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
    <result column="nick_names" property="nickNames" jdbcType="VARCHAR" />
    <result column="cmd_names" property="cmdNames" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="room_zone" property="roomZone" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="mqtt_provider_id" property="mqttProviderId" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, hotel_id, room_num, device_type, device_type_code, device_id, device_name, nick_names, 
    cmd_names, remark, room_zone, provider_id, version, mqtt_provider_id, sort, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.source.model.OpStartRoomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from hotel_xiezhu_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hotel_xiezhu_room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hotel_xiezhu_room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.source.model.OpStartRoom" >
    insert into hotel_xiezhu_room (id, hotel_id, room_num, 
      device_type, device_type_code, device_id, 
      device_name, nick_names, cmd_names, 
      remark, room_zone, provider_id, 
      version, mqtt_provider_id, sort, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{hotelId,jdbcType=VARCHAR}, #{roomNum,jdbcType=VARCHAR}, 
      #{deviceType,jdbcType=VARCHAR}, #{deviceTypeCode,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, 
      #{deviceName,jdbcType=VARCHAR}, #{nickNames,jdbcType=VARCHAR}, #{cmdNames,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{roomZone,jdbcType=VARCHAR}, #{providerId,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{mqttProviderId,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.source.model.OpStartRoom" >
    insert into hotel_xiezhu_room
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceTypeCode != null" >
        device_type_code,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="deviceName != null" >
        device_name,
      </if>
      <if test="nickNames != null" >
        nick_names,
      </if>
      <if test="cmdNames != null" >
        cmd_names,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="roomZone != null" >
        room_zone,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="mqttProviderId != null" >
        mqtt_provider_id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceTypeCode != null" >
        #{deviceTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null" >
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="nickNames != null" >
        #{nickNames,jdbcType=VARCHAR},
      </if>
      <if test="cmdNames != null" >
        #{cmdNames,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roomZone != null" >
        #{roomZone,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="mqttProviderId != null" >
        #{mqttProviderId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.source.model.OpStartRoom" >
    update hotel_xiezhu_room
    <set >
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceTypeCode != null" >
        device_type_code = #{deviceTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null" >
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="nickNames != null" >
        nick_names = #{nickNames,jdbcType=VARCHAR},
      </if>
      <if test="cmdNames != null" >
        cmd_names = #{cmdNames,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roomZone != null" >
        room_zone = #{roomZone,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="mqttProviderId != null" >
        mqtt_provider_id = #{mqttProviderId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.source.model.OpStartRoom" >
    update hotel_xiezhu_room
    set hotel_id = #{hotelId,jdbcType=VARCHAR},
      room_num = #{roomNum,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=VARCHAR},
      device_type_code = #{deviceTypeCode,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      device_name = #{deviceName,jdbcType=VARCHAR},
      nick_names = #{nickNames,jdbcType=VARCHAR},
      cmd_names = #{cmdNames,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      room_zone = #{roomZone,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      mqtt_provider_id = #{mqttProviderId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>